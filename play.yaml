---
- name: PROVISION VMS
  hosts: localhost
  connection: local
  gather_facts: no
  become: no
  vars:
    deployment_id: fabio1
    deployment: 
      - cluster_name: fabio1
        copies: 1
        inventory_groups:
          - haproxy
        exact_count: 1
        instance:
          cpu: 1
        volumes:
          os:
            size: 20
            type: standard_ssd
          data: []
        tags:
          Name: fabio1-lb
        project: my-team
        groups:
          - user: ubuntu
            public_ip: true
            public_key_id: workshop
            tags:
              owner: fabio
            cloud: gcp
            image: projects/ubuntu-os-cloud/global/images/family/ubuntu-2404-lts-amd64
            region: us-east4
            vpc_id: default
            security_groups:
              - cockroachdb
            zone: b
            subnet: default
  tasks:
    - name: Ensure presence of instances
      shell: |
        cloud_instance \
          -d {{ deployment_id }} \
          --deployment '{{ deployment | to_json }}' 
          --defaults '{{ defaults | to_json }}'
      vars:
        defaults:
          aws:
            '4':
              default: m6i.xlarge
            '8':
              default: m6i.2xlarge
          azure:
            '4':
              default: Standard_D4s_v3
            '8':
              default: Standard_D8s_v3
          gcp:
            '1':
              default: e2-micro
            '8':
              default: n2-standard-8

      register: instances

    - name: Wait for SSH to come up
      wait_for:
        host: "{{ item.public_ip }}"
        port: 22
        timeout: 180
        sleep: 5
        state: started
      loop: "{{ instances.stdout | from_json }}"

    - name: Build ansible inventory dynamically
      add_host:
        # id
        name: "{{ item.public_ip }}"
        id: "{{ item.id }}"

        # locality
        cloud: "{{ item.cloud }}"
        region: "{{ item.region }}"
        zone: "{{ item.zone }}"

        # addresses
        public_hostname: "{{ item.public_hostname }}"
        public_ip: "{{ item.public_ip }}"
        private_hostname: "{{ item.private_hostname }}"
        private_ip: "{{ item.private_ip }}"

        # tags
        ansible_user: "{{ item.ansible_user }}"
        ansible_host: "{{ item.public_ip }}"
        groups: "{{ item.inventory_groups }}"
        cluster_name: "{{ item.cluster_name }}"
        group_name: "{{ item.group_name }}"
        extra_vars: "{{ item.extra_vars }}"
      loop: "{{ instances.stdout | from_json }}"

    - name: save cluster list of hosts
      copy:
        content: |
          {% for item in groups %}
          {% if item not in ['all', 'ungrouped'] %}
          [{{item}}]
          {% for entry in groups[item] %}
          {{ entry }} ansible_host={{ hostvars[entry].ansible_host }} cloud={{ hostvars[entry].cloud }} cluster_name={{ hostvars[entry].cluster_name }}  group_name={{ hostvars[entry].group_name }} id={{ hostvars[entry].id }} region={{ hostvars[entry].region }} zone={{ hostvars[entry].zone }} private_hostname={{ hostvars[entry].private_hostname }} private_ip={{ hostvars[entry].private_ip }} public_hostname={{ hostvars[entry].public_hostname }} public_ip={{ hostvars[entry].public_ip }} ansible_user={{ hostvars[entry].ansible_user }} extra_vars="{{ hostvars[entry].extra_vars }}" 
          {% endfor %} 

          {% endif %}
          {% endfor %}
        dest: "{{ deployment_id }}.ini"
